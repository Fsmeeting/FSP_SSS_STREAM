*** Settings ***
Documentation     选取CreateStream作为例子
...               由于SP 中跟SC 打交道的接口只有create streram， 而create stream 中没有用到sp的instance id，所以设置instance id 恒定为一个正确值。因此，只写一个topic来做测试，也就是以下两种场景：
...               每个服务的源topic都不一样，目的topic 正确，intance id 正确
...               每个服务的源topic都不一样，目的topic 错误，intance id 正确
Resource          ../../../Resources/config.txt

*** Test Cases ***
invalid topic and valid instance_id
    [Documentation]    这里设置错误的topic，然后设置一个该用例独有的app id，
    ...    如果以错误的topic发送出去，流能够创建成功，那么就证明系统有bug；如果流没有创建成功，那么这是期望值。
    ...
    ...    验证理论：如果流没有创建成功，那么监听端就不会收到流id，从而通过流id就不能查到上面提的那个独有的app id
    ${sequence}    set variable    ${1}
    ${topicName}    set variable    sc_instance103_invalid
    ${byte_topicName}    encode string to bytes    ${topicName}    UTF-8
    ${client_id}    set variable    client_id04
    ${byte_client_id}    encode string to bytes    ${client_id}    UTF-8
    ${instance_id}    set variable
    ${byte_instance_id}    encode string to bytes    ${instance_id}    UTF-8
    ${app_id}    set variable    app_id_test_invalid_topic
    ${byte_app_id}    encode string to bytes    ${app_id}    UTF-8
    ${client_name}    set variable    albert_client
    ${byte_client_name}    encode string to bytes    ${client_name}    UTF-8
    ${responceTopic}    set variable    cp_test1
    ${byte_responceTopic}    encode string to bytes    ${responceTopic}    UTF-8
    ${kafkacluster}    set variable    192.168.7.63:9092,192.168.7.64:9092,192.168.7.65:9092
    ${byte_kafkacluster}    encode string to bytes    ${kafkacluster}    UTF-8
    RFCreateStream    ${sequence}    ${byte_topicName}    ${byte_app_id}    ${byte_responceTopic}
    sleep    3s
    ${verify_app_id}    ReadFile
    ${byte_verify_app_id}    encode string to bytes    ${verify_app_id}    UTF-8
    log    ${verify_app_id}
    log    ${byte_app_id}
    Should not Be Equal    ${byte_verify_app_id}    ${byte_app_id}

valid topic and valid instance_id
    ${sequence}    set variable    ${1}
    ${topicName}    set variable    sc_instance103
    ${byte_topicName}    encode string to bytes    ${topicName}    UTF-8
    ${client_id}    set variable    client_id04
    ${byte_client_id}    encode string to bytes    ${client_id}    UTF-8
    ${instance_id}    set variable
    ${byte_instance_id}    encode string to bytes    ${instance_id}    UTF-8
    ${app_id}    set variable    app_id_01
    ${byte_app_id}    encode string to bytes    ${app_id}    UTF-8
    ${client_name}    set variable    albert_client
    ${byte_client_name}    encode string to bytes    ${client_name}    UTF-8
    ${responceTopic}    set variable    cp_test1
    ${byte_responceTopic}    encode string to bytes    ${responceTopic}    UTF-8
    ${kafkacluster}    set variable    192.168.7.63:9092,192.168.7.64:9092,192.168.7.65:9092
    ${byte_kafkacluster}    encode string to bytes    ${kafkacluster}    UTF-8
    RFCreateStream    ${sequence}    ${byte_topicName}    ${byte_app_id}    ${byte_responceTopic}
    sleep    1s
    ${verify_app_id}    ReadFile
    ${byte_verify_app_id}    encode string to bytes    ${verify_app_id}    UTF-8
    log    ${byte_verify_app_id}
    log    ${byte_app_id}
    Should Be Equal    ${byte_verify_app_id}    ${byte_app_id}
