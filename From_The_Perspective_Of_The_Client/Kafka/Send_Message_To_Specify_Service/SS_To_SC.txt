*** Settings ***
Documentation     采用ChannelConnected 这个接口为例子
Resource          ../../../Resources/config.txt

*** Test Cases ***
valid topic and empty instance_id
    [Documentation]    为了便于获取流id，在测试ChannelConnected的时候就创建一个流，然后拿到流ID ，再给这个接口使用
    ${sequence}    set variable    ${1}
    ${topicName}    set variable    sc_instance103
    ${byte_topicName}    encode string to bytes    ${topicName}    UTF-8
    ${client_id}    set variable    client_id04
    ${byte_client_id}    encode string to bytes    ${client_id}    UTF-8
    ${instance_id}    set variable    ${EMPTY}
    ${byte_instance_id}    encode string to bytes    ${instance_id}    UTF-8
    ${app_id}    set variable    app_id_01
    ${byte_app_id}    encode string to bytes    ${app_id}    UTF-8
    ${client_name}    set variable    albert_client
    ${byte_client_name}    encode string to bytes    ${client_name}    UTF-8
    ${responceTopic}    set variable    cp_test1
    ${byte_responceTopic}    encode string to bytes    ${responceTopic}    UTF-8
    ${kafkacluster}    set variable    192.168.7.63:9092,192.168.7.64:9092,192.168.7.65:9092
    ${byte_kafkacluster}    encode string to bytes    ${kafkacluster}    UTF-8
    ${datadirection}    set variable    Sending
    ${byte_datadirection}    encode string to bytes    ${datadirection}    UTF-8
    RFCreateStream    ${sequence}    ${byte_topicName}    ${byte_app_id}    ${byte_responceTopic}
    sleep    2s
    ${streamid}    ReadStreamIDForChannelConnected
    ChannelConnected    ${sequence}    ${byte_topicName}    ${byte_client_id}    ${byte_instance_id}    ${streamid}    ${byte_datadirection}
    ...    ${byte_responceTopic}
    sleep    1s
    ${checkresult}    CheckChannelConnected    ${byte_client_id}    ${streamid}
    runkeywordif    ${checkresult}!=True    fail

invalid topic and valid instance_id
    [Documentation]    输入一个该用例特有的client id，然后去数据库查询该clientid是否存在。
    ...    因为topic是invalid的，所以该id不会存到数据库中
    ${sequence}    set variable    ${1}
    ${topicName}    set variable    sc_instance103
    ${byte_topicName}    encode string to bytes    ${topicName}    UTF-8
    ${client_id}    set variable    client_id04
    ${byte_client_id}    encode string to bytes    ${client_id}    UTF-8
    ${instance_id}    set variable    ${EMPTY}
    ${byte_instance_id}    encode string to bytes    ${instance_id}    UTF-8
    ${app_id}    set variable    app_id_01
    ${byte_app_id}    encode string to bytes    ${app_id}    UTF-8
    ${client_name}    set variable    albert_client
    ${byte_client_name}    encode string to bytes    ${client_name}    UTF-8
    ${responceTopic}    set variable    cp_test1
    ${byte_responceTopic}    encode string to bytes    ${responceTopic}    UTF-8
    ${kafkacluster}    set variable    192.168.7.63:9092,192.168.7.64:9092,192.168.7.65:9092
    ${byte_kafkacluster}    encode string to bytes    ${kafkacluster}    UTF-8
    ${datadirection}    set variable    Sending
    ${byte_datadirection}    encode string to bytes    ${datadirection}    UTF-8
    ${invalidtopic}    set variable    channelconnected_invalidtopic
    ${byte_invalidtopic}    encode string to bytes    ${invalidtopic}    UTF-8
    ${invalidclientid}    set variable    channelconnected_invalid_clientid
    ${byte_invalidclientid}    encode string to bytes    ${invalidclientid}    UTF-8
    RFCreateStream    ${sequence}    ${byte_topicName}    ${byte_app_id}    ${byte_responceTopic}
    sleep    2s
    ${streamid}    ReadStreamIDForChannelConnected
    ChannelConnected    ${sequence}    ${byte_invalidtopic}    ${invalidclientid}    ${byte_instance_id}    ${streamid}    ${byte_datadirection}
    ...    ${byte_responceTopic}
    sleep    1s
    ${checkresult}    CheckChannelConnected    ${byte_invalidclientid}    ${streamid}
    runkeywordif    ${checkresult}!=False    fail

valid topic and invalid instance_id
    [Documentation]    注：目前没有做异常处理，即使是错误的instanceid仍然是能处理的
    ${sequence}    set variable    ${1}
    ${topicName}    set variable    sc_instance103
    ${byte_topicName}    encode string to bytes    ${topicName}    UTF-8
    ${client_id}    set variable    client_id04
    ${byte_client_id}    encode string to bytes    ${client_id}    UTF-8
    ${instance_id}    set variable    invalid_instance_id
    ${byte_instance_id}    encode string to bytes    ${instance_id}    UTF-8
    ${app_id}    set variable    app_id_01
    ${byte_app_id}    encode string to bytes    ${app_id}    UTF-8
    ${client_name}    set variable    albert_client
    ${byte_client_name}    encode string to bytes    ${client_name}    UTF-8
    ${responceTopic}    set variable    cp_test1
    ${byte_responceTopic}    encode string to bytes    ${responceTopic}    UTF-8
    ${kafkacluster}    set variable    192.168.7.63:9092,192.168.7.64:9092,192.168.7.65:9092
    ${byte_kafkacluster}    encode string to bytes    ${kafkacluster}    UTF-8
    ${datadirection}    set variable    Sending
    ${byte_datadirection}    encode string to bytes    ${datadirection}    UTF-8
    RFCreateStream    ${sequence}    ${byte_topicName}    ${byte_app_id}    ${byte_responceTopic}
    sleep    2s
    ${streamid}    ReadStreamIDForChannelConnected
    ChannelConnected    ${sequence}    ${byte_topicName}    ${byte_client_id}    ${byte_instance_id}    ${streamid}    ${byte_datadirection}
    ...    ${byte_responceTopic}
    sleep    1s
    ${checkresult}    CheckChannelConnected    ${byte_client_id}    ${streamid}
    runkeywordif    ${checkresult}!=True    fail

valid topic and valid instance_id
    ${sequence}    set variable    ${1}
    ${topicName}    set variable    sc_instance103
    ${byte_topicName}    encode string to bytes    ${topicName}    UTF-8
    ${client_id}    set variable    client_id04
    ${byte_client_id}    encode string to bytes    ${client_id}    UTF-8
    ${instance_id}    set variable    instance_sp_125
    ${byte_instance_id}    encode string to bytes    ${instance_id}    UTF-8
    ${app_id}    set variable    app_id_01
    ${byte_app_id}    encode string to bytes    ${app_id}    UTF-8
    ${client_name}    set variable    albert_client
    ${byte_client_name}    encode string to bytes    ${client_name}    UTF-8
    ${responceTopic}    set variable    cp_test1
    ${byte_responceTopic}    encode string to bytes    ${responceTopic}    UTF-8
    ${kafkacluster}    set variable    192.168.7.63:9092,192.168.7.64:9092,192.168.7.65:9092
    ${byte_kafkacluster}    encode string to bytes    ${kafkacluster}    UTF-8
    ${datadirection}    set variable    Sending
    ${byte_datadirection}    encode string to bytes    ${datadirection}    UTF-8
    RFCreateStream    ${sequence}    ${byte_topicName}    ${byte_app_id}    ${byte_responceTopic}
    sleep    2s
    ${streamid}    ReadStreamIDForChannelConnected
    ChannelConnected    ${sequence}    ${byte_topicName}    ${byte_client_id}    ${byte_instance_id}    ${streamid}    ${byte_datadirection}
    ...    ${byte_responceTopic}
    sleep    1s
    ${checkresult}    CheckChannelConnected    ${byte_client_id}    ${streamid}
    runkeywordif    ${checkresult}!=True    fail
